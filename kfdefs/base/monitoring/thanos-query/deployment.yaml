---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: thanos-query
spec:
  replicas: 2
  selector:
    matchLabels:
      app: thanos-query
  template:
    metadata:
      labels:
        app: thanos-query
    spec:
      serviceAccountName: thanos-query-proxy
      containers:
        - args:
          - -provider=openshift
          - -pass-basic-auth=false
          - -https-address=:9091
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:9090
          - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
          - -openshift-service-account=thanos-query-proxy
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -cookie-secret=SECRET
          - -skip-auth-regex=^/metrics
          - '-openshift-sar={"resource": "namespaces", "verb": "get", "resourceName":
              "opf-monitoring", "namespace": "opf-monitoring"}'
          - '-openshift-delegate-urls={"/":{"resource": "namespaces", "verb": "get", "resourceName":
              "opf-monitoring", "namespace": "opf-monitoring"}}'
          image: registry.redhat.io/openshift4/ose-oauth-proxy:v4.7
          name: oauth-proxy
          ports:
            - containerPort: 9091
              name: oauth-proxy
          volumeMounts:
            - mountPath: /etc/tls/private
              name: thanos-query-tls
              readOnly: true
        - name: thanos-query
          image: 'quay.io/thanos/thanos:v0.22.0'
          args:
            - query
            - '--grpc-address=0.0.0.0:10901'
            - '--http-address=0.0.0.0:9090'
            - '--log.format=logfmt'
            - '--query.replica-label=prometheus_replica'
            - '--query.replica-label=thanos_ruler_replica'
            - '--store=dnssrv+_grpc._tcp.thanos-sidecar.opf-monitoring.svc'
            - '--rule=dnssrv+_grpc._tcp.thanos-sidecar.opf-monitoring.svc'
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          imagePullPolicy: IfNotPresent
      volumes:
        - name: thanos-query-tls
          secret:
            secretName: thanos-query-tls
